<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="springboot.shop.repository.mapper.ItemMapper">

    <insert id="save" useGeneratedKeys="true" keyProperty="itemId">
        insert into item(name, price, quantity, content, create_date, update_date)
        values (#{name}, #{price}, #{quantity}, #{content}, now(), now())
    </insert>
    <resultMap id="itemResult" type="Item">
        <id property="itemId" column="item_id" />
        <result property="name" column="name" />
        <result property="price" column="price" />
        <result property="quantity" column="quantity" />
        <result property="content" column="content" />
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <collection property="itemImageList" javaType="java.util.ArrayList" ofType="ItemImage">
            <id property="itemImgId" column="item_img_id"/>
            <result property="itemId" column="item_id" />
            <result property="imgName" column="img_name" />
            <result property="originImgName" column="origin_img_name" />
            <result property="paths" column="paths" />
            <result property="orders" column="orders" />
            <result property="createDate" column="img_create_date" />
            <result property="updateDate" column="img_update_date" />
        </collection>
    </resultMap>
    <select id="findById" resultMap="itemResult">
        select i.item_id, i.name, i.price, i.quantity, i.content, i.create_date, i.update_date,
               ii.item_img_id, ii.img_name, ii.origin_img_name, ii.paths, ii.orders, ii.create_date as img_create_date, ii.update_date as img_update_date
        from item i
        inner join item_img ii on i.item_id = ii.item_id
        where i.item_id = #{id}
    </select>

    <select id="findAll" resultMap="itemResult">
        select i.item_id, i.name, i.price, i.quantity, i.content, i.create_date, i.update_date,
        ii.item_img_id, ii.img_name, ii.origin_img_name, ii.paths, ii.orders, ii.create_date as img_create_date, ii.update_date as img_update_date
        from item i
        inner join item_img ii on i.item_id = ii.item_id
        <where>
            <if test="cond.keyword != null">
                and name like concat('%', #{cond.keyword}, '%')
            </if>
        </where>
        limit #{cond.offset}, #{cond.pageSize}
    </select>

    <select id="count" resultType="Integer">
        select count(*)
        from item
        <where>
            <if test="keyword != null">
                and name like concat('%', #{cond.keyword}, '%')
            </if>
        </where>
    </select>

    <update id="update">
        update item
        set name = #{name},
            price = #{price},
            quantity = #{quantity},
            content = #{content},
            update_date = now()
        where item_id = #{itemId}
    </update>

    <delete id="delete">
        delete from item where item_id = #{id}
    </delete>

</mapper>